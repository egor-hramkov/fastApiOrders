version: '3.10'
services:

    app:
      build:
        context: ../
        dockerfile: ./docker/server/Dockerfile
      ports:
        - '8000:80'
      working_dir: /app
      environment:
        - PYTHONUNBUFFERED=1
      depends_on:
        - postgres
        - kafka

    postgres:
      image: postgres:13.3
      environment:
        POSTGRES_MULTIPLE_DATABASES: sqlalchemy_fastapi,test_sqlalchemy_fastapi
        POSTGRES_USER: "postgres"
        POSTGRES_PASSWORD: "python"
        PGDATA: "/var/lib/postgresql/data/pgdata"
      volumes:
        - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
        - data:/var/lib/postgresql/data
      ports:
        - "5432:5432"
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U postgres -d sqlalchemy_fastapi" ]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 10s
      restart: unless-stopped

    pgadmin:
      container_name: pgadmin_container
      image: dpage/pgadmin4:7.2
      environment:
        PGADMIN_DEFAULT_EMAIL: "habrpguser@habr.com"
        PGADMIN_DEFAULT_PASSWORD: "python"
        PGADMIN_CONFIG_SERVER_MODE: "False"
        PGADMIN_LISTEN_PORT: 5050
      volumes:
        - pgadmin-data:/var/lib/pgadmin
      ports:
        - "5050:5050"
      restart: unless-stopped
      deploy:
        resources:
          limits:
            cpus: '0.5'
            memory: 1G

    zookeeper-server:
        image: 'bitnami/zookeeper:latest'
        ports:
          - '2181:2181'
        environment:
          - ALLOW_ANONYMOUS_LOGIN=yes
    kafka:
        image: 'bitnami/kafka:latest'
        ports:
          - '9092:9092'
          #- '29092:29092'
        environment:
          - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181
          - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
          - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
          - ALLOW_PLAINTEXT_LISTENER=yes
        depends_on:
          - zookeeper-server

    redis:
      image: redis
      container_name: redis
      restart: unless-stopped
      volumes:
        - ./redis/data:/data
        - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      ports:
        - 6379:6379
      command: redis-server /usr/local/etc/redis/redis.conf


    kafka_layer-ui:
        image: provectuslabs/kafka-ui:latest
        container_name: kafka_layer-ui
        ports:
          - "8090:8080"
        restart: always
        environment:
          - KAFKA_CLUSTERS_0_NAME=local
          - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
          - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
        links:
          - kafka
          - zookeeper-server

volumes:
  data:
  pgadmin-data:
